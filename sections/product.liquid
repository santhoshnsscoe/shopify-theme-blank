{% comment %}
  This section is used in the product template to render product page with
  media, content, and add-to-cart form.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/product
{% endcomment %}

{% liquid
  assign current_variant = product.selected_or_first_available_variant
  assign price = current_variant.price
  assign compare_at_price = current_variant.compare_at_price
  assign on_sale = false
  if compare_at_price and compare_at_price > price
    assign on_sale = true
  endif
%}
<div class="product">
  <div class="product__images">
    {% for image in product.images %}
      {% render 'image', class: 'product__image', image: image %}
    {% endfor %}
  </div>
  <div class="product__details">
    <div class="product__info">
      <h1>{{ product.title }}</h1>
      <p>
        <span class="product__price {% if on_sale %}product__sale-price{% endif %}">{{ price | money }}</span>
        <span class="product__compare-price {% unless on_sale %}hide{% endunless %}">
          {{- compare_at_price | money -}}
        </span>
      </p>
      <p>{{ product.description }}</p>
    </div>

    {% render 'product-form', current_product: product, current_variant: current_variant, section_settings: section.settings %}

    {% if section.settings.notify_me %}
      {% render 'notify-me', current_product: product, current_variant: current_variant %}
    {% endif %}
  </div>
</div>

{% stylesheet %}
  .product {
    display: flex;
    flex-direction: row;
    gap: 20px;
  }
  .product__images {
    width: 50%;
  }
  .product__details {
    width: 50%;
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  .product__info {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .product__price {
    color: #333;
  }
  .product__compare-price {
    text-decoration: line-through;
  }

  @media (max-width: 768px) {
    .product {
      flex-direction: column;
    }
    .product__images {
      width: 100%;
    }
    .product__details {
      width: 100%;
    }
  }
{% endstylesheet %}

<script>
  window.productConfig = {
    addToCart: {{ 'product.add_to_cart' | t | json }},
    soldOut: {{ 'product.sold_out' | t | json }},
    canNotifyMe: {{ section.settings.notify_me | json }}
  };
</script>

{% javascript %}
  const ProductPage = {
    init: function () {
      this.productForm = document.querySelector('.product__form-form');
      this.productActions = document.querySelector('.product__form-buttons');
      this.productPrice = document.querySelector('.product__price');
      this.productComparePrice = document.querySelector('.product__compare-price');
      this.productNotifyMe = document.querySelector('.product__notify-me');

      this.productVariantsPills = document.querySelectorAll('.product__form-pill');
      this.productVariantsPills?.forEach((variant) => {
        variant.addEventListener('click', (e) => {
          e.preventDefault();
          this.updateVariant(variant);
        });
      });
    },

    updateVariant: function (variant) {
      this.productForm.querySelector('input[name="id"]').value = variant.dataset.id;
      this.productVariantsPills.forEach((otherVariant) => {
        otherVariant.classList.remove('active');
      });
      variant.classList.add('active');
      this.updateSubmitButton(variant);
      this.updatePrice(variant);
      this.updateNotifyMe(variant);
    },

    updateSubmitButton: function (variant) {
      if (!this.productActions) return;
      const submitButton = this.productActions.querySelector('.product__form-submit');
      if (variant.dataset.available === 'false') {
        submitButton.disabled = true;
        submitButton.value = window.productConfig.soldOut;
      } else {
        submitButton.disabled = false;
        submitButton.value = window.productConfig.addToCart;
      }
    },

    updatePrice: function (variant) {
      if (!this.productPrice) return;
      this.productPrice.textContent = variant.dataset.price;

      if (!this.productComparePrice) return;
      this.productComparePrice.textContent = variant.dataset.comparePrice;

      if (variant.dataset.onSale === 'true') {
        this.productPrice.classList.add('product__sale-price');
        this.productComparePrice.classList.remove('hide');
      } else {
        this.productPrice.classList.remove('product__sale-price');
        this.productComparePrice.classList.add('hide');
      }
    },

    updateNotifyMe: function (variant) {
      if (!this.productNotifyMe) return;

      document.getElementById('notify-me-variant-id').value = variant.dataset.id;
      document.getElementById('notify-me-variant-title').value = variant.dataset.title;
      if (variant.dataset.available === 'true') {
        this.productNotifyMe.classList.add('hide');
      } else {
        this.productNotifyMe.classList.remove('hide');
      }
    },
  };

  document.addEventListener('DOMContentLoaded', function () {
    ProductPage.init();
  });
{% endjavascript %}

{% schema %}
{
  "name": "t:general.product",
  "settings": [
    {
      "type": "header",
      "content": "t:general.variant_picker"
    },
    {
      "type": "select",
      "id": "picker_type",
      "label": "t:general.type",
      "default": "select",
      "options": [
        { "value": "select", "label": "t:options.variant_picker.dropdown" },
        { "value": "pills", "label": "t:options.variant_picker.pills" }
      ]
    },
    {
      "type": "header",
      "content": "t:general.notify_me"
    },
    {
      "type": "checkbox",
      "id": "notify_me",
      "label": "t:general.enabled",
      "default": false
    }
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
